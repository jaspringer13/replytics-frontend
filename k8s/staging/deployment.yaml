apiVersion: apps/v1
kind: Deployment
metadata:
  name: replytics-frontend
  namespace: staging
  labels:
    app: replytics-frontend
    version: ${VERSION:-latest}
    environment: staging
  annotations:
    deployment.kubernetes.io/revision: "${VERSION:-latest}"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: replytics-frontend
  template:
    metadata:
      labels:
        app: replytics-frontend
        version: ${VERSION:-latest}
        environment: staging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      serviceAccountName: replytics-frontend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: frontend
        image: ${IMAGE}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "staging"
        - name: NEXT_TELEMETRY_DISABLED
          value: "1"
        - name: PORT
          value: "3000"
        - name: HOSTNAME
          value: "0.0.0.0"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: redis-url
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: nextauth-secret
        - name: NEXTAUTH_URL
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: nextauth-url
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: supabase-url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: supabase-anon-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: replytics-frontend-service
  namespace: staging
  labels:
    app: replytics-frontend
    environment: staging
spec:
  selector:
    app: replytics-frontend
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: replytics-frontend-ingress
  namespace: staging
  labels:
    app: replytics-frontend
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - staging.replytics.com
    secretName: replytics-staging-tls
  rules:
  - host: staging.replytics.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: replytics-frontend-service
            port:
              number: 80

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: replytics-frontend
  namespace: staging
  labels:
    app: replytics-frontend
    environment: staging