apiVersion: apps/v1
kind: Deployment
metadata:
  name: replytics-frontend-${COLOR:-blue}
  namespace: production
  labels:
    app: replytics-frontend
    color: ${COLOR:-blue}
    version: ${VERSION:-latest}
    environment: production
  annotations:
    deployment.kubernetes.io/revision: "${VERSION:-latest}"
    kubernetes.io/description: "Replytics frontend ${COLOR:-blue} deployment"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: replytics-frontend
      color: ${COLOR:-blue}
  template:
    metadata:
      labels:
        app: replytics-frontend
        color: ${COLOR:-blue}
        version: ${VERSION:-latest}
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      serviceAccountName: replytics-frontend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: frontend
        image: ${IMAGE}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: replytics-config
              key: NODE_ENV
        - name: NEXT_TELEMETRY_DISABLED
          valueFrom:
            configMapKeyRef:
              name: replytics-config
              key: NEXT_TELEMETRY_DISABLED
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: replytics-config
              key: PORT
        - name: HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: replytics-config
              key: HOSTNAME
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: redis-url
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: nextauth-secret
        - name: NEXTAUTH_URL
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: nextauth-url
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: google-client-secret
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: supabase-url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: supabase-anon-key
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: supabase-service-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: openai-api-key
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: twilio-account-sid
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: twilio-auth-token
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: replytics-secrets
              key: sentry-dsn
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /api/health/ready
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
          successThreshold: 1
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        - name: cache
          mountPath: /app/.next/cache
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: logs
        emptyDir:
          sizeLimit: 500Mi
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - replytics-frontend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      terminationGracePeriodSeconds: 60